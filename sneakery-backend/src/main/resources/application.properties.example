# Server Configuration
server.port=8080
server.servlet.context-path=/

spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=sneakery_db;encrypt=true;trustServerCertificate=true
spring.datasource.username=sa
spring.datasource.password=YOUR_DATABASE_PASSWORD_HERE

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Logging Configuration
logging.level.root=INFO
logging.level.com.sneakery=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Jackson Configuration (JSON)
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Ho_Chi_Minh
spring.jackson.default-property-inclusion=non_null

# Multipart File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# CORS Configuration
cors.allowed-origins=http://localhost:3000,http://localhost:4200,http://localhost:5173
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Application Custom Properties
app.name=Sneakery E-commerce
app.version=1.0.0

# ==========================================
# JWT Configuration
# ==========================================
# JWT Secret Key (Generate your own secure key)
# To generate: Run this Java code or use online tool
# String secret = Base64.getEncoder().encodeToString(java.util.UUID.randomUUID().toString().getBytes());
app.jwt.secret=YOUR_JWT_SECRET_KEY_HERE

# JWT Token Expiration Time (in milliseconds) - 24 hours
app.jwt.expiration-ms=86400000

# ==========================================
# NOTE: Copy this file to application.properties and fill in your credentials
# ==========================================

